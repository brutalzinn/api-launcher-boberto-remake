// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ModPackClient {
  id            Int                     @id @default(autoincrement())
  externalId              String      @unique   @default(uuid())
  name          String
  gameVersion   String
  createAt      DateTime                @default(now())
  updateAt      DateTime                @updatedAt
  files         FileUpload[]
  metadatas     ModpackClientMetadata[]
  ModpackServer ModpackServer[]
}

model ModpackClientMetadata {
  id              Int            @id @default(autoincrement())
  modpackId Int
  key       String
  value     String
  modpack   ModPackClient @relation(fields: [modpackId], references: [id])
  createAt  DateTime      @default(now())
  updateAt  DateTime      @updatedAt

  @@unique([modpackId, key], name: "modpack_id_key")
}

model ModpackServer {
  id          Int                     @id @default(autoincrement())
  externalId              String      @unique   @default(uuid())
  name        String
  ip          String
  port        Int
  gameVersion String
  modpackId   Int
  alias       String
  files       FileUpload[]
  metadatas   ModpackServerMetadata[]
  createAt    DateTime                @default(now())
  updateAt    DateTime                @updatedAt
  client      ModPackClient           @relation(fields: [modpackId], references: [id])
}

model ModpackServerMetadata {
  id              Int            @id @default(autoincrement())
  modpackServerId Int
  key             String
  value           String
  modpack         ModpackServer @relation(fields: [modpackServerId], references: [id])
  createAt        DateTime      @default(now())
  updateAt        DateTime      @updatedAt

  @@unique([modpackServerId, key], name: "modpack_server_id_key")
}

model FileUpload {
  id              Int            @id @default(autoincrement())
  externalId              String      @unique   @default(uuid())
  name            String
  mime            String
  extension       String
  path String 
  size Int
  checksum String
  provider        String
  ModPackClient   ModPackClient? @relation(fields: [modPackClientId], references: [id])
  modPackClientId Int?
  ModpackServer   ModpackServer? @relation(fields: [modpackServerId], references: [id])
  modpackServerId Int?
}
