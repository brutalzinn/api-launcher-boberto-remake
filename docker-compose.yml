version: "3"
services: 
  # api:
  #   build:
  #     context: .
  #   ports:
  #     - "${PORT}:8000"
  #   env_file:
  #     - .env
  #   networks:
  #     - docker-service
  #   depends_on: 
  #     - mariadb
  #   volumes:
  #     - "./src:/app"

  mongo1:
    hostname: mongo3
    image: mongo
    expose:
      - 27017
    ports:
      - 30003:27017
    restart: always
    command: mongod --replSet my-mongo-set

# finally, we can define the initialization server
# this runs the `rs.initiate` command to intialize
# the replica set and connect the three servers to each other
  mongoinit:
    image: mongo
    # this container will exit after executing the command
    restart: "no"
    depends_on:
      - mongo1
    command: >
      mongo --host mongo1:27017 --eval 
      '
      db = (new Mongo("localhost:27017")).getDB("test");
      config = {
      "_id" : "my-mongo-set",
      "members" : [
        {
          "_id" : 0,
          "host" : "mongo1:27017"
        }
      ]
      };
      rs.initiate(config);
      '      

networks:
  docker-service:
    driver: bridge

volumes:
  mongo-data:
    driver: local